---
description: 
globs: 
alwaysApply: false
---
# Styling Conventions and Brand Assets

This rule outlines the primary styling conventions, brand assets (colors, fonts), and CSS structure used in the Rave Yoga Shopify theme customization.

## CSS Variables and Custom Properties

*   **Central Definition:** Custom CSS variables for the Rave Yoga brand are centrally defined in `[snippets/rave-variables.liquid](mdc:snippets/rave-variables.liquid)`.
*   **Source of Values:** These variables often pull their values from theme settings configured in the Shopify Customizer, specifically under "Rave Brand Settings" (added via `[config/settings_schema.json](mdc:config/settings_schema.json)`).
*   **Mapping to Dawn:** `[snippets/rave-variables.liquid](mdc:snippets/rave-variables.liquid)` also maps these custom Rave brand variables to Dawn's standard global CSS variables (e.g., `--color-text`, `--color-background`, `--color-button`) to ensure brand consistency throughout the theme.
*   **Usage:** All custom CSS written in `[assets/rave-custom.css](mdc:assets/rave-custom.css)` should prioritize using these defined CSS variables (e.g., `var(--rave-color-primary-text)`) rather than hardcoding hex values.

## Brand Colors

These are the primary brand colors, accessible via their respective CSS variables defined in `[snippets/rave-variables.liquid](mdc:snippets/rave-variables.liquid)`:

*   **Primary Text:** `#3D2120` (variable: `--rave-color-primary-text`)
*   **Main Background:** `#FFFFFF` (variable: `--rave-color-background-main`)
*   **Secondary Text:** `#555555` (variable: `--rave-color-secondary-text`)
*   **Accent Color:** `#412F26` (variable: `--rave-color-accent`)
*   **Button Text:** `#FFFFFF` (variable: `--rave-color-button-text` - typically used with the accent color as button background)

## Typography

*   **Primary Font Stack:** "Inter" (including its fallbacks like `sans-serif`).
*   **Theme Setting:** The "Inter" font is set globally via the Shopify Theme Customizer (Theme Settings -> Typography).
*   **CSS Variables:** `[snippets/rave-variables.liquid](mdc:snippets/rave-variables.liquid)` captures the theme's font choices into variables like `--rave-font-stack-primary` and `--rave-font-stack-secondary`, which are then mapped to Dawn's `--font-heading-family` and `--font-body-family`.

## Breakpoints and Responsive Design

*   **Approach:** Mobile-first.
*   **Key Breakpoints Used in Custom CSS:**
    *   **Mobile:** Styles typically apply by default, or are scoped within `@media screen and (max-width: 749px) { ... }`.
    *   **Tablet (Implied):** Styles for viewports between `750px` and `989px` are handled by styles that apply from `min-width: 750px` but are overridden by `min-width: 990px` desktop styles if necessary.
    *   **Desktop:** Styles are typically scoped within `@media screen and (min-width: 990px) { ... }`. This is Dawn's primary desktop breakpoint.

## Collection Grid Border System

The collection page features a consistent 1px border system that creates clean separation between product cards:

*   **Implementation:** Uses direct border application on grid items with selective targeting:
    *   Right and bottom borders on all grid items
    *   Top border only on first row items
    *   Left border only on first column items 
    *   Bottom border removed from last row to prevent overlap with footer border
*   **Responsive Handling:**
    *   Mobile (max-width: 749px): 2-column grid with adapted border rules
    *   Desktop (min-width: 990px): 3-column grid (default) or 4-column grid with appropriate border rules
*   **Border Color:** Uses `var(--rave-color-primary-text, #3D2120)` for consistency with brand standards
*   **CSS Pattern:**
    ```css
    /* Base borders for all items */
    .collection .grid__item {
      border-right: 1px solid var(--rave-color-primary-text, #3D2120);
      border-bottom: 1px solid var(--rave-color-primary-text, #3D2120);
    }
    
    /* Selective top and left borders */
    .collection .product-grid .grid__item:nth-child(-n+3) {
      border-top: 1px solid var(--rave-color-primary-text, #3D2120);
    }
    
    .collection .product-grid .grid__item:nth-child(3n+1) {
      border-left: 1px solid var(--rave-color-primary-text, #3D2120);
    }
    
    /* Remove bottom border from last row */
    .collection .product-grid .grid__item:nth-last-child(-n+3) {
      border-bottom: none;
    }
    ```

## CSS File Structure (`[assets/rave-custom.css](mdc:assets/rave-custom.css)`)

*   The file is intended to be organized with clear comments:
    1.  Global Resets or Overrides (use sparingly).
    2.  Rave Specific Reusable Utility Classes.
    3.  Component/Section Specific Styles (e.g., `/* == HEADER == */`, `/* == FOOTER == */`, `/* == MOBILE MENU == */`).

## Button System

The Rave Yoga theme uses a consistent button system to maintain brand recognition across the site:

### Button Types

1. **Primary Button**:
   * **Default State:** Brown background (`--rave-color-accent`, #412F26) with white text
   * **Hover State:** Transparent background with white border and text
   * **CSS Classes:** `.button--primary`, `.main-hero__button.button--primary`

2. **Secondary Button**:
   * **Default State:** Transparent background with white border and text
   * **Hover State:** White background with brown text (`--rave-color-accent`, #412F26)
   * **CSS Classes:** `.button--secondary`, `.main-hero__button.button--secondary`

### Implementation Details

* **Border Radius:** All buttons use `var(--buttons-radius, 3px)` for consistent rounded corners
* **Box Shadows:** All box shadows and pseudo-element borders are explicitly removed
* **Font Family:** All buttons use the Rave font stack (`--rave-font-stack-primary`, 'Inter')
* **Responsive Behavior:** Buttons adapt appropriately on mobile devices
* **Transition:** `transition: all 0.3s ease` for smooth state changes

### CSS Implementation

The button system uses high-specificity selectors with `!important` flags to override Dawn's base styles:

```css
/* Base button reset */
.button,
.shopify-challenge__button,
.customer button,
button.shopify-payment-button__button--unbranded,
.main-hero__button {
  /* Reset properties and add consistent styling */
}

/* Primary button styling */
.button--primary,
.button[data-color-scheme="primary"],
.main-hero__button.button--primary {
  /* Primary button specific styling */
}

/* Secondary button styling */
.button--secondary,
.button[data-color-scheme="secondary"],
.main-hero__button.button--secondary {
  /* Secondary button specific styling */
}
```

### Usage Guidelines

* Use primary buttons for main calls-to-action (e.g., "Add to Cart", "Checkout")
* Use secondary buttons for supplementary actions (e.g., "Continue Shopping", "Learn More")
* Do not add additional styling that would override the consistent button appearance
* When adding new buttons, use the appropriate button class (`.button--primary` or `.button--secondary`)
